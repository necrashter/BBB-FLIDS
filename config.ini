[INPUT]
# The following field should point to a CSV file containing the dataset.
dataset path    = datasets/nid.csv
# Ratio of the validation set
validation size = 0.2
random seed     = 42

# Neural network parameters
[ML]
learning rate   = 0.01
momentum        = 0.9
batch size      = 32
test batch size = 64

# Federated learning parameters
[FL]
# dummy or eth
platform        = eth
num users       = 10
local epochs    = 5
global epochs   = 10
# Fraction of users who will participate in data standardization step.
# Can be 0, in which case preprocessing step is skipped.
preprocessing fraction = 0.5
# Fraction of users who will participate in training in each round
training fraction      = 0.5

[DATATYPES]
# Number of bits in the float datatype used in all internal model and dataset arrays
# 16, 32, 64
internal = 64
# Float datatype used to serialize and communicate the model on blockchain
external = 32

[MODEL]
# Name of the model in ModelConfig.py
# Create new models in ModelConfig.py and select them here
# Or choose a pre-existing one
name      = SingleLayer
# After name, you can specify custom parameters for your model.
# Neuron count in the hidden layer.
neuron count = 5

[TESTING]
# Evaluate the model on validation set at the end of each round
evaluate per epoch = on
# JSON file in which the results will be saved
results file       = results.json
